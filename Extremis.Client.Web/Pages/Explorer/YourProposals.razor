@page "/Proposals"
@using Extremis.Proposals
@inject ProposalService ProposalService

<div class="page-body">
    <div class="container">
        <div class="card">
            <div class="card-header">
                <h3 class="page-title">Your Proposals</h3>
                <div class="card-actions">
                    <div class="btn-list align-items-center">
                        <a href="/explore" class="mx-2">Go back to Explore</a>
                    </div>
                </div>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col">
                        <InputText class="form-control" @bind-Value="_searchString" />
                    </div>
                    <div class="col-auto">
                        <button class="btn btn-primary" @onclick="@(() => LoadProposals(1))">
                            <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-search" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                                <path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"></path><path d="M21 21l-6 -6"></path>
                            </svg>
                            Search
                        </button>
                    </div>
                </div>
                @if (_loaded)
                {
                    <div class="text-center">
                        <Pagination CurrentPage="_pageNumber" TotalPages="_totalPages" PageChanged="LoadProposals" />
                    </div>
                    <div class="row row-cards">
                        <div class="space-y">
                            @foreach (var proposal in _proposals)
                            {
                                <div class="card">
                                    <div class="row g-0">
                                        <div class="col">
                                            <div class="card-body">
                                                <h3>@proposal.Title</h3>
                                                <span>@proposal.Description</span>
                                            </div>
                                        </div>
                                        <div class="col-auto">
                                            <div class="card-body">
                                                <div class="d-flex align-items-center">
                                                    <div class="btn-list">
                                                        <button class="btn btn-secondary">See Candidates</button>
                                                        <button class="btn btn-yellow">Edit</button>
                                                        <button class="btn btn-danger">Close Proposal</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
                else
                {
                    <div class="progress progress-sm">
                        <div class="progress-bar progress-bar-indeterminate"></div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


@code
{
    private int _pageNumber = 1;
    private int _pageSize = 10;
    private int _totalPages;
    private string _searchString = "";
    private bool _loaded;
    private List<ProposalDto> _proposals = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadProposals(_pageNumber);
        _loaded = true;
    }

    private async Task LoadProposals(int pageNumber)
    {
        var result = await ProposalService.GetAllMyProposals(pageNumber, _pageSize, _searchString);
        if (result.Succeeded)
        {
            _proposals = result.Data;
            _totalPages = result.TotalPages;
        }
        else
        {
            foreach (var message in result.Messages)
            {
                Toast.Add("Error", message, Severity.Error);
            }
        }
    }
}
