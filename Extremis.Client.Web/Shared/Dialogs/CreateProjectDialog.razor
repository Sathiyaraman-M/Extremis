@inject ProjectService ProjectService
@using Extremis.Projects
<EditForm Model="_request" OnValidSubmit="CreateProject">
    <Dialog>
        <DialogContent>
            <div class="row">
                <div class="col-12">
                    <div class="mb-3">
                        <div class="form-label">Title</div>
                        <InputText class="form-control" @bind-Value="_request.Title" />
                    </div>
                </div>
                <div class="col-12">
                    <div class="mb-3">
                        <div class="form-label">Description</div>
                        <InputTextArea rows="3" class="form-control" @bind-Value="_request.Description" />
                    </div>
                </div>
            </div>
        </DialogContent>
        <DialogActions>
            <button class="btn" @onclick="@(() => Dialog.Cancel())">Cancel</button>
            <button class="btn btn-primary" type="submit">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-plus" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                   <path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M12 5l0 14"></path><path d="M5 12l14 0"></path>
                </svg>
                Create
            </button>
        </DialogActions>
    </Dialog>
</EditForm>
@code {
    private CreateProjectRequestDto _request = new(); 
    
    [CascadingParameter]
    public DialogInstance Dialog { get; set; }

    private async Task CreateProject()
    {
        var result = await ProjectService.CreateProject(_request);
        if (result.Succeeded)
        {
            Toast.Add("Success", result.Messages.FirstOrDefault(), Severity.Success);
            Dialog.Close();
        }
        else
        {
            foreach (var message in result.Messages)
            {
                Toast.Add("Error", message, Severity.Error);
            }
        }
    }
}